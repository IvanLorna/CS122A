
IvanLorna_CS122A_Lab1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000032a  000003be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000032a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000009  00800104  00800104  000003c2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003c2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000434  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fa6  00000000  00000000  000004cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009b3  00000000  00000000  00001472  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000067e  00000000  00000000  00001e25  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  000024a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005c4  00000000  00000000  00002644  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006e0  00000000  00000000  00002c08  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  000032e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	e0 c0       	rjmp	.+448    	; 0x1f6 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea e2       	ldi	r30, 0x2A	; 42
  a0:	f3 e0       	ldi	r31, 0x03	; 3
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ad 30       	cpi	r26, 0x0D	; 13
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	1c d1       	rcall	.+568    	; 0x2fc <main>
  c4:	30 c1       	rjmp	.+608    	; 0x326 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <delay_ms>:
		break;
		default:
		port_B = port_B;
	}
	return state;
}
  c8:	18 16       	cp	r1, r24
  ca:	19 06       	cpc	r1, r25
  cc:	5c f0       	brlt	.+22     	; 0xe4 <delay_ms+0x1c>
  ce:	08 95       	ret
  d0:	00 00       	nop
  d2:	21 50       	subi	r18, 0x01	; 1
  d4:	31 09       	sbc	r19, r1
  d6:	e1 f7       	brne	.-8      	; 0xd0 <delay_ms+0x8>
  d8:	4f 5f       	subi	r20, 0xFF	; 255
  da:	5f 4f       	sbci	r21, 0xFF	; 255
  dc:	84 17       	cp	r24, r20
  de:	95 07       	cpc	r25, r21
  e0:	19 f4       	brne	.+6      	; 0xe8 <delay_ms+0x20>
  e2:	08 95       	ret
  e4:	40 e0       	ldi	r20, 0x00	; 0
  e6:	50 e0       	ldi	r21, 0x00	; 0
  e8:	27 e0       	ldi	r18, 0x07	; 7
  ea:	33 e0       	ldi	r19, 0x03	; 3
  ec:	f1 cf       	rjmp	.-30     	; 0xd0 <delay_ms+0x8>

000000ee <LCD_WriteCommand>:
  ee:	2e 98       	cbi	0x05, 6	; 5
  f0:	8b b9       	out	0x0b, r24	; 11
  f2:	2f 9a       	sbi	0x05, 7	; 5
  f4:	00 00       	nop
  f6:	2f 98       	cbi	0x05, 7	; 5
  f8:	82 e0       	ldi	r24, 0x02	; 2
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	e5 cf       	rjmp	.-54     	; 0xc8 <delay_ms>
  fe:	08 95       	ret

00000100 <LCD_ClearScreen>:
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	f5 cf       	rjmp	.-22     	; 0xee <LCD_WriteCommand>
 104:	08 95       	ret

00000106 <LCD_init>:
 106:	84 e6       	ldi	r24, 0x64	; 100
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	de df       	rcall	.-68     	; 0xc8 <delay_ms>
 10c:	88 e3       	ldi	r24, 0x38	; 56
 10e:	ef df       	rcall	.-34     	; 0xee <LCD_WriteCommand>
 110:	86 e0       	ldi	r24, 0x06	; 6
 112:	ed df       	rcall	.-38     	; 0xee <LCD_WriteCommand>
 114:	8f e0       	ldi	r24, 0x0F	; 15
 116:	eb df       	rcall	.-42     	; 0xee <LCD_WriteCommand>
 118:	81 e0       	ldi	r24, 0x01	; 1
 11a:	e9 df       	rcall	.-46     	; 0xee <LCD_WriteCommand>
 11c:	8a e0       	ldi	r24, 0x0A	; 10
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	d3 cf       	rjmp	.-90     	; 0xc8 <delay_ms>
 122:	08 95       	ret

00000124 <TimerISR>:
 124:	cf 92       	push	r12
 126:	df 92       	push	r13
 128:	ef 92       	push	r14
 12a:	ff 92       	push	r15
 12c:	1f 93       	push	r17
 12e:	cf 93       	push	r28
 130:	df 93       	push	r29
 132:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
 136:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <tasksNum>
 13a:	88 23       	and	r24, r24
 13c:	09 f4       	brne	.+2      	; 0x140 <TimerISR+0x1c>
 13e:	53 c0       	rjmp	.+166    	; 0x1e6 <TimerISR+0xc2>
 140:	80 e0       	ldi	r24, 0x00	; 0
 142:	1b e0       	ldi	r17, 0x0B	; 11
 144:	c0 91 0b 01 	lds	r28, 0x010B	; 0x80010b <tasks>
 148:	d0 91 0c 01 	lds	r29, 0x010C	; 0x80010c <tasks+0x1>
 14c:	18 9f       	mul	r17, r24
 14e:	c0 0d       	add	r28, r0
 150:	d1 1d       	adc	r29, r1
 152:	11 24       	eor	r1, r1
 154:	4d 81       	ldd	r20, Y+5	; 0x05
 156:	5e 81       	ldd	r21, Y+6	; 0x06
 158:	6f 81       	ldd	r22, Y+7	; 0x07
 15a:	78 85       	ldd	r23, Y+8	; 0x08
 15c:	89 81       	ldd	r24, Y+1	; 0x01
 15e:	9a 81       	ldd	r25, Y+2	; 0x02
 160:	ab 81       	ldd	r26, Y+3	; 0x03
 162:	bc 81       	ldd	r27, Y+4	; 0x04
 164:	48 17       	cp	r20, r24
 166:	59 07       	cpc	r21, r25
 168:	6a 07       	cpc	r22, r26
 16a:	7b 07       	cpc	r23, r27
 16c:	b0 f0       	brcs	.+44     	; 0x19a <TimerISR+0x76>
 16e:	88 81       	ld	r24, Y
 170:	e9 85       	ldd	r30, Y+9	; 0x09
 172:	fa 85       	ldd	r31, Y+10	; 0x0a
 174:	08 2e       	mov	r0, r24
 176:	00 0c       	add	r0, r0
 178:	99 0b       	sbc	r25, r25
 17a:	09 95       	icall
 17c:	88 83       	st	Y, r24
 17e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 182:	e0 91 0b 01 	lds	r30, 0x010B	; 0x80010b <tasks>
 186:	f0 91 0c 01 	lds	r31, 0x010C	; 0x80010c <tasks+0x1>
 18a:	18 9f       	mul	r17, r24
 18c:	e0 0d       	add	r30, r0
 18e:	f1 1d       	adc	r31, r1
 190:	11 24       	eor	r1, r1
 192:	15 82       	std	Z+5, r1	; 0x05
 194:	16 82       	std	Z+6, r1	; 0x06
 196:	17 82       	std	Z+7, r1	; 0x07
 198:	10 86       	std	Z+8, r1	; 0x08
 19a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 19e:	e0 91 0b 01 	lds	r30, 0x010B	; 0x80010b <tasks>
 1a2:	f0 91 0c 01 	lds	r31, 0x010C	; 0x80010c <tasks+0x1>
 1a6:	18 9f       	mul	r17, r24
 1a8:	e0 0d       	add	r30, r0
 1aa:	f1 1d       	adc	r31, r1
 1ac:	11 24       	eor	r1, r1
 1ae:	c5 80       	ldd	r12, Z+5	; 0x05
 1b0:	d6 80       	ldd	r13, Z+6	; 0x06
 1b2:	e7 80       	ldd	r14, Z+7	; 0x07
 1b4:	f0 84       	ldd	r15, Z+8	; 0x08
 1b6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
 1ba:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
 1be:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__data_start+0x2>
 1c2:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__data_start+0x3>
 1c6:	4c 0d       	add	r20, r12
 1c8:	5d 1d       	adc	r21, r13
 1ca:	6e 1d       	adc	r22, r14
 1cc:	7f 1d       	adc	r23, r15
 1ce:	45 83       	std	Z+5, r20	; 0x05
 1d0:	56 83       	std	Z+6, r21	; 0x06
 1d2:	67 83       	std	Z+7, r22	; 0x07
 1d4:	70 87       	std	Z+8, r23	; 0x08
 1d6:	8f 5f       	subi	r24, 0xFF	; 255
 1d8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 1dc:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <tasksNum>
 1e0:	89 17       	cp	r24, r25
 1e2:	08 f4       	brcc	.+2      	; 0x1e6 <TimerISR+0xc2>
 1e4:	af cf       	rjmp	.-162    	; 0x144 <TimerISR+0x20>
 1e6:	df 91       	pop	r29
 1e8:	cf 91       	pop	r28
 1ea:	1f 91       	pop	r17
 1ec:	ff 90       	pop	r15
 1ee:	ef 90       	pop	r14
 1f0:	df 90       	pop	r13
 1f2:	cf 90       	pop	r12
 1f4:	08 95       	ret

000001f6 <__vector_13>:
 1f6:	1f 92       	push	r1
 1f8:	0f 92       	push	r0
 1fa:	0f b6       	in	r0, 0x3f	; 63
 1fc:	0f 92       	push	r0
 1fe:	11 24       	eor	r1, r1
 200:	0b b6       	in	r0, 0x3b	; 59
 202:	0f 92       	push	r0
 204:	2f 93       	push	r18
 206:	3f 93       	push	r19
 208:	4f 93       	push	r20
 20a:	5f 93       	push	r21
 20c:	6f 93       	push	r22
 20e:	7f 93       	push	r23
 210:	8f 93       	push	r24
 212:	9f 93       	push	r25
 214:	af 93       	push	r26
 216:	bf 93       	push	r27
 218:	ef 93       	push	r30
 21a:	ff 93       	push	r31
 21c:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <tasksPeriodCntDown>
 220:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <tasksPeriodCntDown+0x1>
 224:	a0 91 09 01 	lds	r26, 0x0109	; 0x800109 <tasksPeriodCntDown+0x2>
 228:	b0 91 0a 01 	lds	r27, 0x010A	; 0x80010a <tasksPeriodCntDown+0x3>
 22c:	01 97       	sbiw	r24, 0x01	; 1
 22e:	a1 09       	sbc	r26, r1
 230:	b1 09       	sbc	r27, r1
 232:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <tasksPeriodCntDown>
 236:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <tasksPeriodCntDown+0x1>
 23a:	a0 93 09 01 	sts	0x0109, r26	; 0x800109 <tasksPeriodCntDown+0x2>
 23e:	b0 93 0a 01 	sts	0x010A, r27	; 0x80010a <tasksPeriodCntDown+0x3>
 242:	89 2b       	or	r24, r25
 244:	8a 2b       	or	r24, r26
 246:	8b 2b       	or	r24, r27
 248:	89 f4       	brne	.+34     	; 0x26c <__vector_13+0x76>
 24a:	6c df       	rcall	.-296    	; 0x124 <TimerISR>
 24c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 250:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 254:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 258:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 25c:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <tasksPeriodCntDown>
 260:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <tasksPeriodCntDown+0x1>
 264:	a0 93 09 01 	sts	0x0109, r26	; 0x800109 <tasksPeriodCntDown+0x2>
 268:	b0 93 0a 01 	sts	0x010A, r27	; 0x80010a <tasksPeriodCntDown+0x3>
 26c:	ff 91       	pop	r31
 26e:	ef 91       	pop	r30
 270:	bf 91       	pop	r27
 272:	af 91       	pop	r26
 274:	9f 91       	pop	r25
 276:	8f 91       	pop	r24
 278:	7f 91       	pop	r23
 27a:	6f 91       	pop	r22
 27c:	5f 91       	pop	r21
 27e:	4f 91       	pop	r20
 280:	3f 91       	pop	r19
 282:	2f 91       	pop	r18
 284:	0f 90       	pop	r0
 286:	0b be       	out	0x3b, r0	; 59
 288:	0f 90       	pop	r0
 28a:	0f be       	out	0x3f, r0	; 63
 28c:	0f 90       	pop	r0
 28e:	1f 90       	pop	r1
 290:	18 95       	reti

00000292 <TimerSet>:
 292:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 296:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 29a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 29e:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
 2a2:	60 93 07 01 	sts	0x0107, r22	; 0x800107 <tasksPeriodCntDown>
 2a6:	70 93 08 01 	sts	0x0108, r23	; 0x800108 <tasksPeriodCntDown+0x1>
 2aa:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <tasksPeriodCntDown+0x2>
 2ae:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <tasksPeriodCntDown+0x3>
 2b2:	08 95       	ret

000002b4 <TimerOn>:
 2b4:	8b e0       	ldi	r24, 0x0B	; 11
 2b6:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 2ba:	8d e7       	ldi	r24, 0x7D	; 125
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 2c2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 2c6:	82 e0       	ldi	r24, 0x02	; 2
 2c8:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 2cc:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 2d0:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 2d4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 2d8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 2dc:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 2e0:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 2e4:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <tasksPeriodCntDown>
 2e8:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <tasksPeriodCntDown+0x1>
 2ec:	a0 93 09 01 	sts	0x0109, r26	; 0x800109 <tasksPeriodCntDown+0x2>
 2f0:	b0 93 0a 01 	sts	0x010A, r27	; 0x80010a <tasksPeriodCntDown+0x3>
 2f4:	8f b7       	in	r24, 0x3f	; 63
 2f6:	80 68       	ori	r24, 0x80	; 128
 2f8:	8f bf       	out	0x3f, r24	; 63
 2fa:	08 95       	ret

000002fc <main>:

int main(void)
{
	//initialize ports
	DDRB = 0xFF; PORTB = 0x00;
 2fc:	8f ef       	ldi	r24, 0xFF	; 255
 2fe:	84 b9       	out	0x04, r24	; 4
 300:	15 b8       	out	0x05, r1	; 5
	DDRA = 0x00; PORTA = 0xFF;
 302:	11 b8       	out	0x01, r1	; 1
 304:	82 b9       	out	0x02, r24	; 2
	DDRC = 0xFF; PORTC = 0x00;
 306:	87 b9       	out	0x07, r24	; 7
 308:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00;
 30a:	8a b9       	out	0x0a, r24	; 10
 30c:	1b b8       	out	0x0b, r1	; 11
	tasks[i].period = 250;
	tasks[i].elapsedTime = 0;
	tasks[i].TickFct = &Button;
	
	//initialize LCD
	LCD_init();
 30e:	fb de       	rcall	.-522    	; 0x106 <LCD_init>
	LCD_ClearScreen();
 310:	f7 de       	rcall	.-530    	; 0x100 <LCD_ClearScreen>
 312:	6a ef       	ldi	r22, 0xFA	; 250
	TimerSet(PERIOD);
 314:	70 e0       	ldi	r23, 0x00	; 0
 316:	80 e0       	ldi	r24, 0x00	; 0
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	bb df       	rcall	.-138    	; 0x292 <TimerSet>
	TimerOn();
 31c:	cb df       	rcall	.-106    	; 0x2b4 <TimerOn>
 31e:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <port_B>
	
	while(1)
	{
		PORTB = port_B;
 322:	85 b9       	out	0x05, r24	; 5
 324:	fc cf       	rjmp	.-8      	; 0x31e <main+0x22>

00000326 <_exit>:
 326:	f8 94       	cli

00000328 <__stop_program>:
 328:	ff cf       	rjmp	.-2      	; 0x328 <__stop_program>
